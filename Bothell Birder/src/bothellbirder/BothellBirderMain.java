package bothellbirder;

import java.awt.Toolkit;
import java.io.File;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;


/**
 *
 * @author Dimitar Dimitrov
 */
public class BothellBirderMain extends javax.swing.JFrame {

    ArrayList<Bird> birds = new ArrayList<Bird>();
    /**
     * Creates new form BothellBirderMain
     */
    public BothellBirderMain() {
        initComponents();
        this.setIconImage(Toolkit.getDefaultToolkit().getImage("src/bothellbirder/images/bird1.jpg"));
        this.getRootPane().setDefaultButton(searchJButton); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        quitJButton = new javax.swing.JButton();
        titleJLabel = new javax.swing.JLabel();
        inputJTextField = new javax.swing.JTextField();
        searchJButton = new javax.swing.JButton();
        infoJScrollPane = new javax.swing.JScrollPane();
        infoJTextArea = new javax.swing.JTextArea();
        searchCriteriaJComboBox = new javax.swing.JComboBox();
        genericJComboBox = new javax.swing.JComboBox();
        pictureJLabel = new javax.swing.JLabel();
        birdsJComboBox = new javax.swing.JComboBox();
        birderJMenuBar = new javax.swing.JMenuBar();
        fileJMenu = new javax.swing.JMenu();
        printJMenuItem = new javax.swing.JMenuItem();
        quitJMenuItem = new javax.swing.JMenuItem();
        actionJMenu = new javax.swing.JMenu();
        helpJMenu = new javax.swing.JMenu();
        aboutJMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bothell Birder");
        setResizable(false);

        quitJButton.setText("Quit");
        quitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitJButtonActionPerformed(evt);
            }
        });

        titleJLabel.setFont(new java.awt.Font("Traditional Arabic", 3, 18)); // NOI18N
        titleJLabel.setText("Welcome to Bothell Birder");

        searchJButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        searchJButton.setText("Search");
        searchJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchJButtonActionPerformed(evt);
            }
        });

        infoJTextArea.setEditable(false);
        infoJTextArea.setColumns(20);
        infoJTextArea.setFont(new java.awt.Font("Monospaced", 1, 13)); // NOI18N
        infoJTextArea.setLineWrap(true);
        infoJTextArea.setRows(5);
        infoJScrollPane.setViewportView(infoJTextArea);

        searchCriteriaJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "name", "color", "weight" }));
        searchCriteriaJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BothellBirderMain.this.actionPerformed(evt);
            }
        });

        genericJComboBox.setEnabled(false);

        birdsJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionPerformed2(evt);
            }
        });

        fileJMenu.setText("File");

        printJMenuItem.setText("Print");
        printJMenuItem.setEnabled(false);
        fileJMenu.add(printJMenuItem);

        quitJMenuItem.setText("Quit");
        quitJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(quitJMenuItem);

        birderJMenuBar.add(fileJMenu);

        actionJMenu.setText("Action");
        birderJMenuBar.add(actionJMenu);

        helpJMenu.setText("Help");

        aboutJMenuItem.setText("About");
        aboutJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutJMenuItemActionPerformed(evt);
            }
        });
        helpJMenu.add(aboutJMenuItem);

        birderJMenuBar.add(helpJMenu);

        setJMenuBar(birderJMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(115, Short.MAX_VALUE)
                .addComponent(titleJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(infoJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(searchCriteriaJComboBox, 0, 102, Short.MAX_VALUE)
                                .addComponent(birdsJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(genericJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(inputJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(searchJButton))
                                .addComponent(pictureJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(192, 192, 192)
                            .addComponent(quitJButton))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchJButton)
                    .addComponent(searchCriteriaJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(genericJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(birdsJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pictureJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(infoJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quitJButton)
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-465)/2, (screenSize.height-437)/2, 465, 437);
    }// </editor-fold>//GEN-END:initComponents

    private void quitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitJButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_quitJButtonActionPerformed

    private void quitJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitJMenuItemActionPerformed
        quitJButtonActionPerformed(evt); // calls the Quit button
    }//GEN-LAST:event_quitJMenuItemActionPerformed

    private void aboutJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutJMenuItemActionPerformed
       About newForm = new About();
       newForm.setVisible(true);
    }//GEN-LAST:event_aboutJMenuItemActionPerformed

    private void searchJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchJButtonActionPerformed
        String searchStr = inputJTextField.getText();  
        String searchCriteria = (String) searchCriteriaJComboBox.getSelectedItem();
        
        infoJTextArea.setText(""); // clear the field
        pictureJLabel.setIcon(null);
        
        // if the genericComboBox is enabled 
        if(genericJComboBox.isEnabled()) 
            searchStr = (String) genericJComboBox.getSelectedItem();
        
        if(searchStr.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter valid input!",
                                         "Input Error", JOptionPane.ERROR_MESSAGE);
        }
        else {
            Search obj = new Search(searchStr, searchCriteria);
            // populate the drop down menu with
            birds = obj.readData();
            
            if(birds.isEmpty())
                JOptionPane.showMessageDialog(null, "No bird matches the criteria!",
                                         "Bird not found", JOptionPane.ERROR_MESSAGE);

            populateBirdsComboBox();
        }
    }//GEN-LAST:event_searchJButtonActionPerformed

    private void populateBirdsComboBox() {
        birdsJComboBox.removeAllItems();
        if(!birds.isEmpty()) {
                for(int i = 0; i < birds.size(); i++) {
                    birdsJComboBox.addItem(birds.get(i).getName());
                }
        }
    }
    
    // an action listener for the Categories Combo Box
    private void actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionPerformed
          populatePreData(searchCriteriaJComboBox.getSelectedIndex());
    }//GEN-LAST:event_actionPerformed

    // an action listener for the Birds Combo Box
    private void actionPerformed2(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionPerformed2
       showBird(birdsJComboBox.getSelectedIndex());
    }//GEN-LAST:event_actionPerformed2

    // displays the birds' info in the text area and a picture of the bird
    private void showBird(int index) {
        if(index >= 0) {
            infoJTextArea.setText("");
            infoJTextArea.append(birds.get(index).toString());
            pictureJLabel.setIcon(new ImageIcon("src/bothellbirder/images/" +
                                          birds.get(index).getName() + ".jpg"));
        }
    }
    private void populatePreData(int index) {   
       genericJComboBox.removeAllItems();
       inputJTextField.setText("");
           
        switch(index) {
            case 1:  
                genericJComboBox.setEnabled(true);
                inputJTextField.setEnabled(false);
                genericJComboBox.addItem("Blue");
                genericJComboBox.addItem("Brown");
                genericJComboBox.addItem("Gray");
                genericJComboBox.addItem("Red");
                genericJComboBox.addItem("White");
                genericJComboBox.addItem("Yellow");
                break;
            default:
                inputJTextField.setEnabled(true);
                genericJComboBox.setEnabled(false);
                break;
        }
    }
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BothellBirderMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BothellBirderMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BothellBirderMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BothellBirderMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BothellBirderMain().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutJMenuItem;
    private javax.swing.JMenu actionJMenu;
    private javax.swing.JMenuBar birderJMenuBar;
    private javax.swing.JComboBox birdsJComboBox;
    private javax.swing.JMenu fileJMenu;
    private javax.swing.JComboBox genericJComboBox;
    private javax.swing.JMenu helpJMenu;
    private javax.swing.JScrollPane infoJScrollPane;
    private javax.swing.JTextArea infoJTextArea;
    private javax.swing.JTextField inputJTextField;
    private javax.swing.JLabel pictureJLabel;
    private javax.swing.JMenuItem printJMenuItem;
    private javax.swing.JButton quitJButton;
    private javax.swing.JMenuItem quitJMenuItem;
    private javax.swing.JComboBox searchCriteriaJComboBox;
    private javax.swing.JButton searchJButton;
    private javax.swing.JLabel titleJLabel;
    // End of variables declaration//GEN-END:variables
}
